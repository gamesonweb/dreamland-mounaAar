{"version":3,"file":"js/main.01c470e300eedcddd191.js","mappings":"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","sources":["webpack://gameland/./src/pieces.js","webpack://gameland/./src/highlight.js","webpack://gameland/./src/player.js","webpack://gameland/./src/game.js","webpack://gameland/./assets/musics/magic-chessboard-278016.mp3","webpack://gameland/./src/soundmanager.js","webpack://gameland/./src/index.js"],"sourcesContent":["import { SceneLoader, Vector3 } from \"@babylonjs/core\";\n\nconst initialPlacementMap = {\n  \"roi-blanc\": [\"e1\"],\n  \"reine-blanc\": [\"d1\"],\n  \"tour-blanc\": [\"a1\", \"h1\"],\n  \"fou-blanc\": [\"c1\", \"f1\"],\n  \"cavalier-blanc\": [\"b1\", \"g1\"],\n  \"pion-blanc\": [\"a2\", \"b2\", \"c2\", \"d2\", \"e2\", \"f2\", \"g2\", \"h2\"],\n  \"roi-noir\": [\"e8\"],\n  \"reine-noir\": [\"d8\"],\n  \"tour-noir\": [\"a8\", \"h8\"],\n  \"fou-noir\": [\"c8\", \"f8\"],\n  \"cavalier-noir\": [\"b8\", \"g8\"],\n  \"pion-noir\": [\"a7\", \"b7\", \"c7\", \"d7\", \"e7\", \"f7\", \"g7\", \"h7\"]\n};\nconst elevatedPieces = new Set([\n  \"roi-blanc\", \"reine-blanc\", \"fou-blanc\",\n  \"roi-noir\", \"reine-noir\", \"fou-noir\"\n]);\n\nexport function loadPieces(scene, casePositions, shadowGen) {\n  SceneLoader.ImportMesh(\"\", \"./public/assets/models/\", \"./pieces.glb\", scene, meshes => {\n    meshes.forEach(m => {\n      m.isVisible = false;\n      m.isPickable = false;\n    });\n\n    Object.entries(initialPlacementMap).forEach(([meshName, squares]) => {\n      const proto = meshes.find(m => m.name === meshName);\n      if (!proto) {\n        console.warn(`Prototype manquant : ${meshName}`);\n        return;\n      }\n      const bb = proto.getBoundingInfo().boundingBox;\n      const halfHeight = elevatedPieces.has(meshName) ? bb.extendSizeWorld.y : 0;\n\n      squares.forEach(square => {\n        const key = square;\n        const center = casePositions[key];\n        if (!center) {\n          console.warn(`Pas de position pour ${square}`);\n          return;\n        }\n        const clone = proto.clone(`${meshName}-${square}`);\n        clone.isVisible = true;\n        clone.isPickable = true;\n        clone.position = new Vector3(\n          center.x +2,\n          center.y + halfHeight,\n          center.z +0.5\n        );\n        console.log(`Pièce ${clone.name} placée à ${square} (x:${center.x}, y:${center.y}, z:${center.z})`);\n        shadowGen.addShadowCaster(clone, true);\n      });\n    });\n  });\n}","import { HighlightLayer, Color3 } from \"@babylonjs/core\";\n\nlet hlPiece = null, hlSquare = null;\n\nexport function highlightPiece(scene, mesh) {\n  if (!hlPiece) hlPiece = new HighlightLayer(\"hlPiece\", scene);\n  hlPiece.removeAllMeshes();\n  if (mesh) {\n    hlPiece.addMesh(mesh, mesh.name.includes(\"blanc\") ? Color3.White() : Color3.Magenta());\n  }\n}\n\nexport function highlightSquares(scene, meshes) {\n  if (!hlSquare) hlSquare = new HighlightLayer(\"hlSquare\", scene);\n  hlSquare.removeAllMeshes();\n  if (meshes && meshes.length > 0) {\n    meshes.forEach(m => hlSquare.addMesh(m, Color3.Yellow()));\n  }\n}","import { HighlightLayer, Color3 } from \"@babylonjs/core\";\nimport { Chess } from \"chess.js\";\nimport { highlightPiece, highlightSquares } from \"./highlight.js\";\n\nexport default class Player {\n  constructor(scene, caseMeshes, casePositions, playerColor) {\n    this.scene = scene;\n    this.caseMeshes = caseMeshes;\n    this.casePositions = casePositions;\n    this.turn = playerColor;\n    this.turnHasChanged = false;\n    this.selectedMesh = null;\n\n    // Initialise le moteur d’échecs\n    this.chess = new Chess();\n    this.chess.reset();\n    console.log(\"État initial du plateau :\", this.chess.ascii());\n\n    // HighlightLayers\n    this.hlPiece = new HighlightLayer(\"hlPiece\", scene);\n    this.hlSquare = new HighlightLayer(\"hlSquare\", scene);\n  }\n\n  selectPiece(mesh) {\n    this.selectedMesh = mesh;\n    const from = mesh.name.split(\"-\")[2];\n    console.log(`Sélection de ${mesh.name}, from: ${from}, position réelle: x:${mesh.position.x}, z:${mesh.position.z}`);\n    const moves = this.chess.moves({ square: from, verbose: true });\n    console.log(`Coups possibles pour ${mesh.name} :`, moves.map(m => m.to));\n    return moves.map(m => m.to);\n  }\n\n  tryMove(toSquare) {\n    if (!this.selectedMesh) {\n      console.log(\"Aucune pièce sélectionnée pour le déplacement.\");\n      return null;\n    }\n    const from = this.selectedMesh.name.split(\"-\")[2];\n    const to = toSquare;\n    console.log(\"État du plateau avant coup :\", this.chess.ascii());\n    console.log(\"Tentative de coup :\", { from, to });\n\n    let mv = this.chess.move({ from, to });\n    if (mv) return mv;\n\n    const rank = toSquare[1];\n    if (this.selectedMesh.name.startsWith(\"pion-\") && (rank === \"8\" || rank === \"1\")) {\n      try {\n        mv = this.chess.move({ from, to, promotion: \"q\" });\n      } catch (e) {\n        console.log(\"Erreur de promotion :\", e.message);\n      }\n    }\n    if (!mv) {\n      console.log(\"Coup invalide :\", { from, to });\n    }\n    return mv || null;\n  }\n\n  computerPlay() {\n    const moves = this.chess.moves({ verbose: true });\n    if (moves.length === 0) return null;\n    const mv = moves[Math.floor(Math.random() * moves.length)];\n    this.chess.move(mv);\n    console.log(\"Coup IA joué :\", mv);\n    return mv;\n  }\n\n  handlePick(mesh) {\n    const name = mesh.name;\n\n    // Sélection d'une pièce\n    if (/^[a-z]+-(blanc|noir)-[a-h][1-8]$/.test(name)) {\n      const color = name.split(\"-\")[1];\n      if ((this.turn === \"white\" && color !== \"blanc\") ||\n          (this.turn === \"black\" && color !== \"noir\")) {\n        console.log(`Tour incorrect : ${this.turn} ne peut pas jouer ${color}`);\n        return false;\n      }\n\n      if (this.selectedMesh && this.selectedMesh.name === name) {\n        console.log(\"Pièce déjà sélectionnée, annulation de la sélection.\");\n        highlightPiece(this.scene, null);\n        highlightSquares(this.scene, []);\n        this.selectedMesh = null;\n        return false;\n      }\n\n      highlightPiece(this.scene, mesh);\n      const targets = this.selectPiece(mesh);\n      const targetMeshes = targets.map(t => this.caseMeshes[t]).filter(m => m);\n      highlightSquares(this.scene, targetMeshes);\n\n      return false;\n    }\n\n    // Déplacement vers une case\n    if (this.selectedMesh && /^[a-h][1-8]$/.test(name)) {\n      const mv = this.tryMove(name);\n      if (!mv) {\n        console.log(\"Coup invalide vers\", name);\n        return false;\n      }\n\n      const [type, color] = this.selectedMesh.name.split(\"-\");\n      const newName = `${type}-${color}-${name}`;\n      this.selectedMesh.name = newName;\n      this.selectedMesh.position = this.casePositions[name].clone();\n      console.log(`Pièce déplacée : ${newName}`);\n\n      highlightPiece(this.scene, null);\n      highlightSquares(this.scene, []);\n      this.selectedMesh = null;\n\n      this.turn = this.turn === \"white\" ? \"black\" : \"white\";\n      this.turnHasChanged = true;\n      return true;\n    }\n\n    if (this.selectedMesh) {\n      console.log(\"Clic hors pièce ou case valide, désélection.\");\n      highlightPiece(this.scene, null);\n      highlightSquares(this.scene, []);\n      this.selectedMesh = null;\n    }\n\n    return false;\n  }\n\n  playAI() {\n    const comp = this.computerPlay();\n    if (!comp) return;\n    const map = { p: \"pion\", r: \"tour\", n: \"cavalier\", b: \"fou\", q: \"reine\", k: \"roi\" };\n    const meshType = map[comp.piece];\n    const meshCol = comp.color === \"w\" ? \"blanc\" : \"noir\";\n    const fromName = `${meshType}-${meshCol}-${comp.from}`;\n    const toName = `${meshType}-${meshCol}-${comp.to}`;\n    const iaMesh = this.scene.getMeshByName(fromName);\n    if (iaMesh) {\n      iaMesh.name = toName;\n      iaMesh.position = this.casePositions[comp.to].clone();\n      console.log(`IA déplace ${fromName} vers ${toName}`);\n    }\n    this.turn = this.turn === \"white\" ? \"black\" : \"white\";\n    this.turnHasChanged = false;\n  }\n}","import \"@babylonjs/loaders\";\nimport {\n  Engine,\n  Scene,\n  ArcRotateCamera,\n  HemisphericLight,\n  DirectionalLight,\n  ShadowGenerator,\n  Vector3,\n  SceneLoader,\n  PointerEventTypes,\n  AbstractMesh\n} from \"@babylonjs/core\";\nimport { loadPieces } from \"./pieces.js\";\nimport Player from \"./player.js\";\nimport { highlightPiece, highlightSquares } from \"./highlight.js\";\n\nexport default class Game {\n  constructor(canvasOrId, playerColor = \"white\") {\n    this.playerColor = playerColor;\n    const canvas = typeof canvasOrId === \"string\"\n      ? document.getElementById(canvasOrId)\n      : canvasOrId;\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      throw new Error(\"Game: attendu un <canvas> ou son id\");\n    }\n    this.engine = new Engine(canvas, true);\n    this.scene = new Scene(this.engine);\n    this.isProcessingClick = false;\n\n    // Caméra\n    const target = Vector3.Zero();\n    this.camera = new ArcRotateCamera(\n      \"cam\", Math.PI / 2, Math.PI / 3.3, 15, target, this.scene\n    );\n    this.camera.attachControl(canvas, true);\n    this.camera.lowerRadiusLimit = 10;\n    this.camera.upperRadiusLimit = 55;\n    this.camera.lowerBetaLimit = 0.5;\n    this.camera.upperBetaLimit = Math.PI / 2;\n    const half = Math.PI / 2;\n    this.camera.lowerAlphaLimit = Math.PI / 2 - half / 2;\n    this.camera.upperAlphaLimit = Math.PI / 2 + half / 2;\n    this.camera.panningSensibility = 0;\n\n    // Lumières & ombres\n    new HemisphericLight(\"hemi\", Vector3.Up(), this.scene).intensity = 0.5;\n    const dir = new DirectionalLight(\n      \"dir\", new Vector3(-1, -2, -1).normalize(), this.scene\n    );\n    dir.intensity = 1.2;\n    this.shadowGen = new ShadowGenerator(1024, dir);\n    this.shadowGen.usePoissonSampling = true;\n\n    // Map case\n    this.caseMeshes = {};\n    this.casePositions = {};\n\n    // Chargement  plateau\n    SceneLoader.ImportMesh(\"\", \"./public/assets/models/\", \"./echec.glb\", this.scene, meshes => {\n      meshes.forEach(node => {\n        if (!(node instanceof AbstractMesh)) return;\n        const n = node.name;\n        if (/^[a-h][1-8]$/.test(n)) {\n          node.isPickable = true;\n          this.caseMeshes[n] = node;\n          const center = node.getBoundingInfo().boundingBox.centerWorld.clone();\nmeshes.forEach(node => {\n  if (!(node instanceof AbstractMesh)) return;\n  const n = node.name;\n  if (/^[a-h][1-8]$/.test(n)) {\n    node.isPickable = true;\n    this.caseMeshes[n] = node;\n    const center = node.getBoundingInfo().boundingBox.centerWorld.clone();\n    this.casePositions[n] = new Vector3(-center.x, center.y, center.z); // Inverse l'axe x\n    console.log(`Case ${n} positionnée à x:${center.x}, y:${center.y}, z:${center.z}`);\n  }\n});   \n    console.log(`Case ${n} positionnée à x:${center.x}, y:${center.y}, z:${center.z}`);\n        }\n      });\n\n      // Vérif ces cases\n      const a2Pos = this.casePositions['a2'];\n      const h2Pos = this.casePositions['h2'];\n      console.log(`Position de a2 : x:${a2Pos.x}, z:${a2Pos.z}`);\n      console.log(`Position de h2 : x:${h2Pos.x}, z:${h2Pos.z}`);\n\n      // Place les pièces\n      loadPieces(this.scene, this.casePositions, this.shadowGen);\n\n      // Player\n      this.player = new Player(\n        this.scene,\n        this.caseMeshes,\n        this.casePositions,\n        this.playerColor\n      );\n\n      // Gestion de clic\n      this.scene.onPointerObservable.add(evt => {\n        if (evt.type !== PointerEventTypes.POINTERPICK || !evt.pickInfo.hit) return;\n        if (this.isProcessingClick) return;\n        this.isProcessingClick = true;\n\n        const mesh = evt.pickInfo.pickedMesh;\n        if (!mesh) {\n          this.isProcessingClick = false;\n          return;\n        }\n        console.log(\"Clic sur :\", mesh.name);\n        const moved = this.player.handlePick(mesh);\n        if (moved && this.player.turnHasChanged) {\n          this.player.turnHasChanged = false;\n          this.player.playAI();\n        }\n        this.isProcessingClick = false;\n      });\n    });\n\n    this.engine.runRenderLoop(() => this.scene.render());\n    window.addEventListener(\"resize\", () => this.engine.resize());\n  }\n//Caméra vu du dessus\n  toggleTopDownView() {\n    if (!this.camera) return;\n    this._topDown = !this._topDown;\n\n    if (this._topDown) {\n      const topRadius = 80;\n      const topBeta = 0.05;\n      this.camera.lowerBetaLimit = this.camera.upperBetaLimit = topBeta;\n      this.camera.lowerRadiusLimit = this.camera.upperRadiusLimit = topRadius;\n      this.camera.beta = topBeta;\n      this.camera.radius = topRadius;\n      this.camera.lowerAlphaLimit = this.camera.upperAlphaLimit = this.camera.alpha;\n      this.camera.panningSensibility = 0;\n    } else {\n      const s = this._camState || {};\n      this.camera.alpha = s.alpha || Math.PI / 2;\n      this.camera.beta = s.beta || Math.PI / 3.3;\n      this.camera.radius = s.radius || 15;\n      this.camera.lowerAlphaLimit = s.lowerAlphaLimit || Math.PI / 2 - Math.PI / 4;\n      this.camera.upperAlphaLimit = s.upperAlphaLimit || Math.PI / 2 + Math.PI / 4;\n      this.camera.lowerBetaLimit = s.lowerBetaLimit || 0.5;\n      this.camera.upperBetaLimit = s.upperBetaLimit || Math.PI / 2;\n      this.camera.lowerRadiusLimit = s.lowerRadiusLimit || 10;\n      this.camera.upperRadiusLimit = s.upperRadiusLimit || 55;\n      this.camera.panningSensibility = s.panningSensibility || 0;\n    }\n    this._camState = {\n      alpha: this.camera.alpha,\n      beta: this.camera.beta,\n      radius: this.camera.radius,\n      lowerAlphaLimit: this.camera.lowerAlphaLimit,\n      upperAlphaLimit: this.camera.upperAlphaLimit,\n      lowerBetaLimit: this.camera.lowerBetaLimit,\n      upperBetaLimit: this.camera.upperBetaLimit,\n      lowerRadiusLimit: this.camera.lowerRadiusLimit,\n      upperRadiusLimit: this.camera.upperRadiusLimit,\n      panningSensibility: this.camera.panningSensibility\n    };\n  }\n}","export default __webpack_public_path__ + \"32928ad7fdff2848653c45fed5a7d853.mp3\";","import { AssetsManager, Sound } from \"@babylonjs/core\";\nimport music1Url                from \"../assets/musics/magic-chessboard-278016.mp3\";\n\nclass SoundManager {\n  Musics = Object.freeze({\n    GAME_MUSIC: 1,\n    GAME_OVER_MUSIC: 2,\n  });\n\n  musics = [];\n  sounds = [];\n  previousMusic = -1;\n\n  musicEnabled = true;\n  soundEnabled = true;\n\n  scene = null;\n\n  static get instance() {\n    return (\n      globalThis[Symbol.for(`PF_${SoundManager.name}`)] ||\n      new SoundManager()\n    );\n  }\n\n \n  async init(scene) {\n    this.scene = scene;\n    await this.loadAssets();\n    this.playMusic(this.Musics.GAME_MUSIC);\n  }\n\n  playMusic(musicId) {\n    if (!this.musicEnabled || !this.scene) return false;\n    if (this.previousMusic !== -1) {\n      this.musics[this.previousMusic]?.stop();\n      this.previousMusic = -1;\n    }\n    const music = this.musics[musicId];\n    if (music) {\n      music.play();\n      this.previousMusic = musicId;\n      return true;\n    }\n    return false;\n  }\n\n  playSound(soundId, loop = false) {\n    if (!this.soundEnabled || !this.scene) return;\n    const sfx = this.sounds[soundId];\n    if (sfx) {\n      sfx.loop = loop;\n      sfx.play();\n    }\n  }\n\n  setMusicEnabled(enabled) {\n    this.musicEnabled = enabled;\n    if (!enabled && this.previousMusic !== -1) {\n      this.musics[this.previousMusic]?.stop();\n      this.previousMusic = -1;\n    } else if (enabled && this.previousMusic === -1) {\n      this.playMusic(this.Musics.GAME_MUSIC);\n    }\n  }\n\n  setSoundEnabled(enabled) {\n    this.soundEnabled = enabled;\n  }\n\n  async loadAssets() {\n    if (!this.scene) throw new Error(\"SoundManager: scene not set\");\n    return new Promise((resolve, reject) => {\n      const assetsManager = new AssetsManager(this.scene);\n\n      const musicTask = assetsManager.addBinaryFileTask(\n        \"music1\",\n        music1Url\n      );\n\n      assetsManager.onFinish = () => {\n        // créer l’objet Sound pour la musique\n        this.musics[this.Musics.GAME_MUSIC] = new Sound(\n          \"gameMusic\",\n          musicTask.data,\n          this.scene,\n          null,\n          { loop: true, autoplay: false, volume: 0.5 }\n        );\n        resolve(true);\n      };\n\n      assetsManager.onTaskError = (task, message) => {\n        console.error(\"Audio task failed\", task.name, message);\n        reject(false);\n      };\n\n      assetsManager.load();\n    });\n  }\n}\n\nconst { instance } = SoundManager;\nexport { instance as SoundManager };\n","import \"@babylonjs/loaders\";\nimport Game from \"./game.js\";\nimport { SoundManager } from \"./soundmanager.js\";\n\nlet gameInstance = null;\n\ndocument.getElementById(\"startAdventureBtn\").addEventListener(\"click\", () => {\n  document.getElementById(\"homeScreen\").style.display = \"none\";\n  document.getElementById(\"colorOverlay\").style.display = \"flex\";\n});\n\ndocument.getElementById(\"btnWhite\").addEventListener(\"click\", () => startChess(\"white\"));\ndocument.getElementById(\"btnBlack\").addEventListener(\"click\", () => startChess(\"black\"));\n\nasync function startChess(playerColor) {\n  document.getElementById(\"colorOverlay\").style.display = \"none\";\n  document.getElementById(\"renderCanvas\").style.display = \"block\";\n  document.getElementById(\"toggleViewBtn\").style.display = \"block\";\n\n  gameInstance = new Game(\"renderCanvas\", playerColor);\n\n  await SoundManager.init(gameInstance.scene);\n}\n\n\ndocument.getElementById(\"toggleViewBtn\").addEventListener(\"click\", () => {\n  if (gameInstance) gameInstance.toggleTopDownView();\n});\n\nconst settingsBtn      = document.getElementById(\"settingsBtn\");\nconst settingsDropdown = document.getElementById(\"settingsDropdown\");\nconst toggleMusic      = document.getElementById(\"toggleMusic\");\nconst toggleSound      = document.getElementById(\"toggleSound\");\n\ntoggleMusic.addEventListener(\"change\", e => {\n  SoundManager.setMusicEnabled(e.target.checked);\n});\ntoggleSound.addEventListener(\"change\", e => {\n  SoundManager.setSoundEnabled(e.target.checked);\n});\n\nsettingsBtn.addEventListener(\"click\", (e) => {\n    e.stopPropagation(); \n    settingsDropdown.classList.toggle(\"show\");\n  });\n  document.addEventListener(\"click\", (e) => {\n    if (!settingsContainer.contains(e.target)) {\n      settingsDropdown.classList.remove(\"show\");\n    }\n  });"],"names":["initialPlacementMap","elevatedPieces","Set","hlPiece","hlSquare","highlightPiece","scene","mesh","removeAllMeshes","addMesh","name","includes","White","Magenta","highlightSquares","meshes","length","forEach","m","Yellow","Player","constructor","caseMeshes","casePositions","playerColor","this","turn","turnHasChanged","selectedMesh","chess","reset","console","log","ascii","selectPiece","from","split","position","x","z","moves","square","verbose","map","to","tryMove","toSquare","mv","move","rank","startsWith","promotion","e","message","computerPlay","Math","floor","random","handlePick","test","color","targetMeshes","t","filter","type","newName","clone","playAI","comp","meshType","p","r","n","b","q","k","piece","meshCol","fromName","toName","iaMesh","getMeshByName","Game","canvasOrId","canvas","document","getElementById","HTMLCanvasElement","Error","engine","isProcessingClick","target","Zero","camera","PI","attachControl","lowerRadiusLimit","upperRadiusLimit","lowerBetaLimit","upperBetaLimit","half","lowerAlphaLimit","upperAlphaLimit","panningSensibility","Up","intensity","dir","normalize","shadowGen","usePoissonSampling","ImportMesh","node","isPickable","center","getBoundingInfo","boundingBox","centerWorld","y","a2Pos","h2Pos","isVisible","Object","entries","meshName","squares","proto","find","warn","bb","halfHeight","has","extendSizeWorld","addShadowCaster","player","onPointerObservable","add","evt","POINTERPICK","pickInfo","hit","pickedMesh","runRenderLoop","render","window","addEventListener","resize","toggleTopDownView","_topDown","topRadius","topBeta","beta","radius","alpha","s","_camState","SoundManager","Musics","freeze","GAME_MUSIC","GAME_OVER_MUSIC","musics","sounds","previousMusic","musicEnabled","soundEnabled","instance","globalThis","Symbol","for","init","loadAssets","playMusic","musicId","stop","music","play","playSound","soundId","loop","sfx","setMusicEnabled","enabled","setSoundEnabled","Promise","resolve","reject","assetsManager","musicTask","addBinaryFileTask","onFinish","data","autoplay","volume","onTaskError","task","error","load","gameInstance","async","startChess","style","display","settingsBtn","settingsDropdown","toggleMusic","toggleSound","checked","stopPropagation","classList","toggle","settingsContainer","contains","remove"],"sourceRoot":""}